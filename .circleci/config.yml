version: 2.1
jobs:
  build_docs:
    docker:
      - image: cimg/python:3.12-node
    steps:
      # checkout code to default ~/project
      - checkout
      - run:
          name: install dependencies
          command: |
            python -m venv env
            source env/bin/activate
            python -m pip install --upgrade pip
            pip install -r requirements.txt
      - run:
          name: generate docs
          command: |
            source env/bin/activate
            mkdocs build --clean --strict --verbose
      - persist_to_workspace:
          # the mkdocs build outputs are in ~/project/site
          root: ~/project
          paths:
            - site
      - store_artifacts:
          path: ~/project/site/
          destination: dev_docs

  check_links:
    docker:
      - image: cimg/python:3.12
    steps:
      # checkout code to default ~/project
      - checkout
      - attach_workspace:
          # mkdocs build outputs will be in ~/project/site
          at: ~/project
      - run:
          name: install linkchecker
          command: |
            python -m venv env
            source env/bin/activate
            python -m pip install --upgrade pip
            python -m pip install linkchecker
      - run:
          name: check links
          command: |
            source env/bin/activate
            git status
            if (! git log -1 --pretty=oneline | grep REL:) ; then
              chmod a+rX -R ~
              linkchecker -t 1 ~/project/site/
              # check external separately by pointing to all *html so no
              # failures for local file:/// -- yoh found no better way,
              linkchecker -t 1 --check-extern \
                --ignore-url 'file:///.*' \
                --ignore-url 'https://fonts.gstatic.com' \
                --ignore-url 'https://github.com/bids-standard/bids-specification/(pull|tree)/.*' \
                --ignore-url 'https://github.com/[^/]*' \
                --ignore-url 'https://doi.org/.*' \
                --ignore-url 'https://bids-specification.readthedocs.io/en/stable/.*' \
                ~/project/site/*html ~/project/site/*/*.html
            else
              echo "Release PR - do nothing"
            fi

  build_docs_pdf:
    docker:
      - image: texlive/texlive:latest
    steps:
      # checkout code to default ~/project
      - checkout
      - run:
          name: install dependencies
          command: |
            apt-get update && apt install -y python3-pip python3-venv pandoc
            python3 -m venv .venv
            source .venv/bin/activate
            python3 -m pip install --upgrade pip
            python3 -m pip install -r  ~/project/requirements.txt
            python3 -m pip install ~/project/tools/schemacode/[render]
      - run:
          name: install font that works with unicode emojis
          command: apt-get update && apt-get install -y fonts-symbola
      - run:
          name: generate pdf version docs
          command: |
            source .venv/bin/activate
            cd ~/project/pdf_build_src
            bash build_pdf.sh
            mv ~/project/pdf_build_src/bids-spec.pdf ~/project/bids-spec.pdf
      - store_artifacts:
          path: bids-spec.pdf

  # Automatically generate a changelog since migration from Google Docs to GitHub
  github_changelog_generator:
    docker:
      - image: ferrarimarco/github-changelog-generator:1.14.3
    steps:
      - setup_remote_docker:
          version: 18.06.0-ce
      # checkout code to default ~/project
      - checkout
      - run:
          name: Build changelog
          # $CHANGE_TOKEN is generated via the GitHub web UI, and then securely stored within CircleCI web UI
          command: |
            mkdir ~/changelog_build
            git status
            if (git log -1 --pretty=%s | grep Merge*) && (! git log -1 --pretty=%b | grep REL:) ; then
              github_changelog_generator \
                --exclude-tags-regex "^(?!v).*?$" \
                --user bids-standard \
                --project bids-specification \
                --token ${CHANGE_TOKEN} \
                --output ~/changelog_build/CHANGES.md \
                --base ~/project/src/pregh-changes.md \
                --header-label "# Changelog" \
                --release-branch master \
                --no-issues \
                --no-filter-by-milestone \
                --no-compare-link \
                --pr-label "" \
                --enhancement-label "" \
                --bugs-label "" \
                --exclude-labels "exclude-from-changelog"
              cat ~/changelog_build/CHANGES.md
            else
              echo "Commit or Release, do nothing"
            fi
      - persist_to_workspace:
          # raw generated changelog in ~/changelog_build/CHANGES.md
          root: ~/.
          paths:
            - changelog_build

  # Lint and fix the auto generated changes.md file
  lint_generated_changelog:
    docker:
      - image: cimg/node:lts
    steps:
      # checkout code to default ~/project
      - checkout
      - attach_workspace:
          # the freshly built CHANGES.md will be in ~/changelog_build/CHANGES.md
          at: ~/.
      - run:
          name: install remark and extensions
          command: npm install `cat npm-requirements.txt`
      - run:
          name: remark on autogenerated CHANGES.md
          # format changelog, then use sed to change * to -, then lint changelog
          command: |
            git status
            if (git log -1 --pretty=%s | grep Merge*) && (! git log -1 --pretty=%b | grep REL:) ; then
              head -n 100 ~/changelog_build/CHANGES.md
              npx remark-cli ~/changelog_build/CHANGES.md --rc-path ~/project/.remarkrc --output ~/changelog_build/CHANGES.md
              head -n 100 ~/changelog_build/CHANGES.md
              sed -i 's/*   /-   /' ~/changelog_build/CHANGES.md
              head -n 100 ~/changelog_build/CHANGES.md
              npx remark-cli ~/changelog_build/CHANGES.md --frail --rc-path ~/project/.remarkrc
            else
              echo "Commit or Release, do nothing"
            fi
      - persist_to_workspace:
          # linted and fixed changelog in ~/changelog_build/CHANGES.md
          root: ~/.
          paths:
            - changelog_build

  # Push built changelog to repo
  commit_generated_changelog:
    docker:
      - image: cimg/base:stable
    steps:
      - setup_remote_docker:
          version: 17.11.0-ce
      # checkout code to default ~/project
      - checkout
      - attach_workspace:
          # fixed+linted changelog in ~/changelog_build/CHANGES.md
          at: ~/.
      - run:
          name: Changelog deployment
          # $CHANGE_TOKEN is generated via the GitHub web UI, and then securely stored within CircleCI web UI
          command: |
            if (git log -1 --pretty=%s | grep Merge*) && (! git log -1 --pretty=%b | grep REL:) ; then
              mv ~/changelog_build/CHANGES.md ~/project/src/CHANGES.md
              merge_message=$(git log -1 | grep Merge | grep "pull")
              PR_number=$(echo $merge_message | cut -d ' ' -f 4)
              git config credential.helper 'cache --timeout=120'
              git config user.email "bids.maintenance@gmail.com"
              git config user.name "bids-maintenance"
              git add ~/project/src/CHANGES.md
              git commit -m "[DOC] Auto-generate changelog entry for PR ${PR_number}"
              git push https://${CHANGE_TOKEN}@github.com/bids-standard/bids-specification.git master
            else
              echo "Commit or Release, do nothing"
            fi

workflows:
  search_build:
    jobs:
      - build_docs
      - check_links:
          requires:
            - build_docs
      - github_changelog_generator:
          filters:
            branches:
              only: master
      - lint_generated_changelog:
          requires:
            - github_changelog_generator
          filters:
            branches:
              only: master
      - commit_generated_changelog:
          requires:
            - lint_generated_changelog
          filters:
            branches:
              only: master
      - build_docs_pdf
