version: 2.1
jobs:
  build_docs:
    docker:
      - image: cimg/python:3.12
    steps:
      # checkout code to default ~/project
      - checkout
      - run:
          name: generate docs
          command: |
            uv run mkdocs build --clean --strict --verbose
      - persist_to_workspace:
          # the mkdocs build outputs are in ~/project/site
          root: ~/project
          paths:
            - site
      - store_artifacts:
          path: ~/project/site/
          destination: dev_docs

  check_links:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: check links
          command: |
            git status
            if (! git log -1 --pretty=oneline | grep REL:) ; then
              chmod a+rX -R ~
              uvx linkchecker -t 1 ~/project/site/
              # check external separately by pointing to all *html so no
              # failures for local file:/// -- yoh found no better way,
              linkchecker -t 1 --check-extern \
                --ignore-url 'file:///.*' \
                --ignore-url 'https://bids-specification.readthedocs.io/en/stable/.*' \
                --ignore-url 'https://doi.org/.*' \
                --ignore-url 'https://fonts.gstatic.com' \
                --ignore-url 'https://github.com/[^/]*' \
                --ignore-url 'https://github.com/bids-standard/bids-specification/(pull|tree)/.*' \
                --ignore-url 'https://www.incf.org' \
                --ignore-url 'https://dicomlookup.com/dicomtags/.*' \
                --ignore-url 'https://www.instagram.com/bidsstandard/' \
                ~/project/site/*html ~/project/site/*/*.html
            else
              echo "Release PR - do nothing"
            fi

  build_docs_pdf:
    docker:
      - image: texlive/texlive:latest
    steps:
      # checkout code to default ~/project
      - checkout
      - run:
          name: install uv
          command: |
            curl -LsSf https://astral.sh/uv/install.sh | XDG_BIN_HOME=/usr/local/bin sh
      - run:
          name: install dependencies
          command: |
            apt-get update && apt install -y fonts-symbola pandoc
      - run:
          name: generate pdf version docs
          command: |
            uv sync
            source .venv/bin/activate
            cd ~/project/pdf_build_src
            bash build_pdf.sh
            mv ~/project/pdf_build_src/bids-spec.pdf ~/project/bids-spec.pdf
      - store_artifacts:
          path: bids-spec.pdf

workflows:
  search_build:
    jobs:
      - build_docs
      - check_links:
          requires:
            - build_docs
      - build_docs_pdf
