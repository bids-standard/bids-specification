name: "schemacode_ci"

on:
  push:
    branches:
      - "master"
      - "autodata2"
    tags:
      - "schema-*"
  pull_request:
    branches:
      - "*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: ["ubuntu-latest"]
            python-version: ["3.10"]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
            python-version: ${{ matrix.python-version }}
      - run: pip install --upgrade build twine pytest
      - name: Build archive on tag
        run: pytest tools/schemacode/bidsschematools -k make_archive
        env:
          BIDSSCHEMATOOLS_RELEASE: ${{ startsWith(github.ref, 'refs/tags/schema-') }}
      - run: python -m build tools/schemacode
      - name: Check distributions
        run: twine check tools/schemacode/dist/*
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: tools/schemacode/dist/

  run_tests:

    runs-on: ${{ matrix.os }}
    strategy:
        fail-fast: false
        matrix:
            os: ["ubuntu-latest"]
            python-version: ["3.7", "3.8", "3.9", "3.10"]
    name: ${{ matrix.os }} with Python ${{ matrix.python-version }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v3

      - name: "Set up Python"
        uses: actions/setup-python@v4
        with:
            python-version: ${{ matrix.python-version }}

      - name: "Display Python version"
        shell: bash {0}
        run: python -c "import sys; print(sys.version)"

      - name: "Set Release Variable based on tag"
        shell: bash {0}
        run: |
          MY_TAG="$(git describe --tags)"
          if [ "${MY_TAG:0:7}" = "schema-" ]; then
            echo "BIDSSCHEMATOOLS_RELEASE=1" >> $GITHUB_ENV
          fi

      - name: "Install the schemacode package"
        shell: bash {0}
        run: |
          python -m pip install --progress-bar off --upgrade pip
          python -m pip install ./tools/schemacode[all]

      - name: "Run tests"
        shell: bash {0}
        run: |
          echo "Running test suite with BIDSSCHEMATOOLS_RELEASE set to $BIDSSCHEMATOOLS_RELEASE"
          if [ -v BIDSSCHEMATOOLS_RELEASE ]; then
            echo "This will save bundled data into test/data/bundled ."
          fi
          pushd tools/schemacode
            python -m pytest -vvs --pyargs bidsschematools -m "not validate_schema" --cov-append --cov-report=xml --cov=bidsschematools
          popd

      # - name: "Test upload"
      #   shell: bash {0}
      #   id: testpypi_upload
      #   run: |
      #     if [ -v BIDSSCHEMATOOLS_RELEASE ]; then
      #       python -m pip install --upgrade build twine wheel
      #       echo "BIDSSCHEMATOOLS_RELEASE is set to $BIDSSCHEMATOOLS_RELEASE"
      #       pushd tools/schemacode
      #         python -m build
      #         twine upload -u __token__ -p ${{secrets.BIDS_TOKEN_TEST}} --repository testpypi dist/*
      #       popd
      #     fi

      # - name: "Real upload"
      #   shell: bash {0}
      #   if: steps.testpypi_upload.outputs.exit_code == 0
      #   run: |
      #     if [ -v BIDSSCHEMATOOLS_RELEASE ]; then
      #       pushd tools/schemacode
      #         echo "BIDSSCHEMATOOLS_RELEASE is set to $BIDSSCHEMATOOLS_RELEASE"
      #         twine upload -u __token__ -p ${{secrets.BIDS_TOKEN_TEST}} dist/*
      #       popd
      #     fi

      # - name: Upload artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: unit_${{ matrix.os }}_${{ matrix.python-version }}
      #     path: coverage.xml
      #   if: success()

  flake8-lint:
    runs-on: ubuntu-latest
    name: Lint schemacode
    steps:
      - name: Check out source repository
        uses: actions/checkout@v3

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.7"

      - name: Install the schemacode package
        shell: bash {0}
        run: |
          python -m pip install --progress-bar off --upgrade pip setuptools wheel
          python -m pip install -e ./tools/schemacode[all]

      - name: Run flake8
        working-directory: ./tools/schemacode/
        shell: bash {0}
        run: |
          flake8 .

  validate_schema:
    runs-on: ubuntu-latest
    name: Validate schema
    steps:
    - uses: actions/checkout@v3

    - name: Set Up Python environment
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    - name: Install the schemacode package
      shell: bash {0}
      run: |
        python -m pip install --progress-bar off --upgrade pip setuptools wheel
        python -m pip install -e ./tools/schemacode[all]

    - name: Run schema validation tests
      run: python -m pytest --pyargs bidsschematools -m "validate_schema" --cov-append --cov-report=xml --cov=bidsschematools

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: schema_validation
        path: coverage.xml
      if: success()

  upload_to_codecov:
    runs-on: "ubuntu-latest"
    name: Upload coverage
    needs: [run_tests,validate_schema]
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Download artifacts
      uses: actions/download-artifact@v3

    - name: Upload to CodeCov
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: true
