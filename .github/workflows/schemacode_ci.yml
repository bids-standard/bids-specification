name: "schemacode_ci"

on:
  push:
    branches:
      - "master"
    tags:
      - "schema-*"
  pull_request:
    branches:
      - "*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: "Install build dependencies"
        run: pip install --upgrade build twine
      - name: "Install test dependencies on tag"
        run: pip install --upgrade pytest pyyaml pandas tabulate markdown-it-py
        if: ${{ startsWith(github.ref, 'refs/tags/schema-') }}
      - name: "Build archive on tag"
        run: pytest tools/schemacode/bidsschematools -k make_archive
        env:
          BIDSSCHEMATOOLS_RELEASE: 1
        if: ${{ startsWith(github.ref, 'refs/tags/schema-') }}
      - name: "Build source distribution and wheel"
        run: python -m build tools/schemacode
      - name: "Check distribution metadata"
        run: twine check tools/schemacode/dist/*
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: tools/schemacode/dist/

  test:
    runs-on: ${{ matrix.os }}
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        include:
          - os: macos-latest
            python-version: 3
          - os: windows-latest
            python-version: 3
    name: ${{ matrix.os }} with Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v3

      - name: "Set up Python"
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Display Python version"
        run: python -c "import sys; print(sys.version)"

      - name: "Fetch packages"
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - name: "Install package"
        run: |
          pip install $( ls dist/*.whl )[all]

      - name: "Run tests"
        run: |
          python -m pytest -vs --pyargs bidsschematools -m "not validate_schema" \
              --cov-append --cov-report=xml --cov=bidsschematools --doctest-modules

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: unit_${{ matrix.os }}_${{ matrix.python-version }}
          path: coverage.xml
        if: success()

  publish:
    runs-on: ${{ matrix.os }}
    name: Publish Python Package
    needs: [test]
    if: github.event_name == 'push'
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.10"]
    steps:
      - name: "Fetch packages"
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/
      - name: "Test PyPI upload"
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true
      - name: "Upload to PyPI (on tags)"
        if: startsWith(github.ref, 'refs/tags/schema-')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  publish-schema:
    runs-on: ${{ matrix.os }}
    name: Publish to dandi-schema (on master)
    needs: [ publish ]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: "Checkout dandi-schema"
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          repository: bids-standard/bids-schema

      - name: Set Up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install the schemacode package for bst tool used by inject-schema
        run: |
          python -m pip install --progress-bar off --upgrade pip setuptools wheel
          python -m pip install -e ./tools/schemacode[all]

      - name: "Add copy of 'master' to bids-schema"
        run:
          sha=$(git describe --match 'v*' --always master)
          cd bids-schema
          tools/inject-schema master ..
          if ! git diff --exit-code; then
            git config credential.helper 'cache --timeout=120'
            git config user.email "bids.maintenance@gmail.com"
            git config user.name "bids-maintenance"

            git add versions/
            git commit -m "Added master version of schema from $sha"
            git push https://${{ secrets.CHANGE_TOKEN }}@github.com/bids-standard/bids-schema.git main
          fi

  validate_schema:
    runs-on: ubuntu-latest
    name: Validate schema
    steps:
      - uses: actions/checkout@v3

      - name: Set Up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install the schemacode package
        run: |
          python -m pip install --progress-bar off --upgrade pip setuptools wheel
          python -m pip install -e ./tools/schemacode[all]

      - name: Run schema validation tests
        run: python -m pytest --pyargs bidsschematools -m "validate_schema" --cov-append --cov-report=xml --cov=bidsschematools

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: schema_validation
          path: coverage.xml
        if: success()

  upload_to_codecov:
    runs-on: "ubuntu-latest"
    name: Upload coverage
    needs: [test, validate_schema]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Upload to CodeCov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}  # not required but might help API rate limits
          fail_ci_if_error: true
